/**
 * 封装：高内聚低耦合
 * 多态：重载和重写
 *   重载：方法名相同，形参个数或者形参类型不一样(js中不存在真正意义上得重载，js中重载指的是同一个方法，根据传参不同，实现不同得效果)
 *   重写：在类的继承中，子类可以重写父类中得方法。
 * 继承
 *
 * 什么是面向对象？
 * 面向对象是一种编程思想，js本身就是基于面向对象构建出来的(例如：js中有很多内置类，像Promise就是ES6中新增的一个内置类，我们可以基于new Promise来创建一个实例，来管理异步编程，我在项目中，Promise也经常使用，自己也研究过它得源码...)。我们平时用得Vue(new Vue的实例)/React/jQuery也是基于面向对象构建出来得，它们都是类，平时开发的时候都是创建它们的实例来操作的。当然我自己在真实项目中，也封装过一些插件(例如：dialog、拖拽)，也是基于面向对象开发的，这样可以创造不同的实例，来管理私有的属性和公有的方法，很方便...
 * JS中的面向对象，和其他编程语言还是有略微不同的，js中类和实例是基于原型和原型链机制来处理的；而且js中关于类的重载、重写、继承也和其它语言不太一样...
*/
